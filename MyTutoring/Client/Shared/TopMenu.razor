@using System.Security.Claims
<AuthorizeView>
    <Authorized>
        @if (!roleChecked)
        {
            SetChecked();
        }
        @if (roleChecked)
        {
            LoadDataAsync();
        }
        <div class="topNavbar">
            <nav>
                <div class="nav-item px-1" style="float: left;">
                    <NavLink class="nav-link" href="fetchdata" Match="NavLinkMatch.All">
                        <span class="oi oi-home" aria-hidden="true" style="font-size: 35px;"></span>
                    </NavLink>
                </div>
                <div class="nav-item px-1" style="float: left">
                    <NavLink class="nav-link" @onclick="ToggleNavMenu">
                        <span class="oi oi-menu" aria-hidden="true" style="font-size: 35px;"></span>
                    </NavLink>
                </div>
                <div class="nav-item px-1" style="float: right">
                    <NavLink class="nav-link" @onclick="ToggleProfileMenu">
                        <span class="oi oi-person" aria-hidden="true" style="font-size: 35px;"></span>
                    </NavLink>
                </div>
            </nav>
        </div>

        <div class="@NavMenuCssClass" style="height: calc(100vh - 60px); left: 0; background-color: RGB(77, 144, 210); position: absolute; z-index: 9">
            <ul class="nav flex-column  my-auto mx-auto">
                <li class="nav-item px-3">
                    <NavLink class="nav-link" @onclick="()=>ShowHomeworksMenu()">
                        <span class="sideoi oi oi-calculator" aria-hidden="true"></span> Zadania
                    </NavLink>
                    <ul class="nav flex-column">
                        @if (showHomeworksMenu == true)
                        {
                            @if (roleString == "admin" || roleString == "tutor")
                            {
                                <li class="nav-item px-3">
                                    <NavLink class="nav-link" href="createHomework" @onclick="() => HideAllMenus()">
                                        <span class="sideoi oi oi-folder" aria-hidden="true"></span> Utworz zadanie
                                    </NavLink>
                                </li>
                            }
                            <li class="nav-item px-3">
                                <NavLink class="nav-link" href="HomeworkOpen" @onclick="() => HideAllMenus()">
                                    <span class="sideoi oi oi-envelope-open" aria-hidden="true"></span> Otwarte zadania
                                </NavLink>
                            </li>
                            <li class="nav-item px-3">
                                <NavLink class="nav-link" href="HomeworkClosed" @onclick="() => HideAllMenus()">
                                    <span class="sideoi oi oi-envelope-closed" aria-hidden="true"></span> Zamkniete zadania
                                </NavLink>
                            </li>
                        }
                    </ul>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="calendar" @onclick="()=>HideAllMenus()">
                        <span class="sideoi oi oi-calendar" aria-hidden="true"></span> Moje zajęcia
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" @onclick="()=>ShowMaterialsMenu()">
                        <span class="sideoi oi oi-list" aria-hidden="true"></span> Materiały pomocnicze
                    </NavLink>
                    <ul class="nav flex-column">
                        @if (showMaterialsMenu == true)
                        {
                            @if (roleString == "admin" || roleString == "tutor")
                            {
                                <li class="nav-item px-3">
                                    <NavLink class="nav-link" href="visibility" @onclick="() => HideAllMenus()">
                                        <span class="sideoi oi oi-eye" aria-hidden="true"></span> Ustaw widoczność
                                    </NavLink>
                                </li>
                                <li class="nav-item px-3">
                                    <NavLink class="nav-link" href="createMaterialGroup" @onclick="() => HideAllMenus()">
                                        <span class="sideoi oi oi-folder" aria-hidden="true"></span> Utwórz grupę materiałów
                                    </NavLink>
                                </li>
                                <li class="nav-item px-3">
                                    <NavLink class="nav-link" href="createMaterial" @onclick="() => HideAllMenus()">
                                        <span class="sideoi oi oi-file" aria-hidden="true"></span> Utwórz materiał
                                    </NavLink>
                                </li>
                            }
                            @if (materialGroupViewModels != null)
                            {
                                @foreach (var group in materialGroupViewModels)
                                {
                                    <li class="nav-item px-3">
                                        <NavLink class="nav-link" @onclick="@( () => Navigate(group.MaterialGroupId) )">
                                            <span class="sideoi oi oi-arrow-right" aria-hidden="true"></span> @group.Name
                                        </NavLink>
                                    </li>
                                }
                            }
                        }
                    </ul>
                </li>
                @if (roleString == "admin" || roleString == "tutor")
                {
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" @onclick="()=>ShowProfileMenu()">
                            <span class="sideoi oi oi-people" aria-hidden="true"></span> Profile
                        </NavLink>
                        <ul class="nav flex-column">
                            @if (showProfileMenu == true)
                            {
                                @if (roleString == "admin")
                                {
                                    <li class="nav-item px-3">
                                        <NavLink class="nav-link" href="registerTutor" @onclick="() => HideAllMenus()">
                                            <span class="sideoi oi oi-plus" aria-hidden="true"></span> Wygeneruj profil korepetytora
                                        </NavLink>
                                    </li>
                                }
                                <li class="nav-item px-3">
                                    <NavLink class="nav-link" href="registerStudent" @onclick="()=>HideAllMenus()">
                                        <span class="sideoi oi oi-plus" aria-hidden="true"></span> Wygeneruj profil ucznia
                                    </NavLink>
                                </li>
                            }
                        </ul>
                    </li>
                }
            </ul>
        </div>

        <div class="@ProfilMenuCssClass" style="width: 150px; right: 0; background-color: RGB(77, 144, 210); position: absolute; z-index: 9">
            <nav class="flex-column">
                @if (roleString == "student" || roleString == "tutor")
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="editProfile" Match="NavLinkMatch.All" @onclick="()=>HideAllMenus()">
                            <span class="sideoi oi oi-pencil " aria-hidden="true"></span> Edytuj
                        </NavLink>
                    </div>
                }
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Logout" @onclick="()=>HideAllMenus()">
                        <span class="sideoi oi oi-account-logout" aria-hidden="true"></span> wyloguj
                    </NavLink>
                </div>
            </nav>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="topNavbar">
            <nav>
                <div class="nav-item px-1" style="float: left;">
                    <NavLink class="nav-link" href="fetchdata" Match="NavLinkMatch.All">
                        <span class="oi oi-home" aria-hidden="true" style="font-size: 35px;"></span>
                    </NavLink>
                </div>
                <div class="nav-item px-1" style="float: right">
                    <NavLink class="nav-link" @onclick="ToggleProfileMenu">
                        <span class="oi oi-person" aria-hidden="true" style="font-size: 35px;"></span>
                    </NavLink>
                </div>
            </nav>
        </div>

        <div class="@ProfilMenuCssClass" style="width: 150px; right: 0; background-color: RGB(77, 144, 210); position: absolute; z-index: 9">
            <nav class="flex-column">
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Login" @onclick="()=>HideAllMenus()">
                        <span class="sideoi oi oi-account-logout" aria-hidden="true"></span> zaloguj
                    </NavLink>
                </div>
            </nav>
        </div>
    </NotAuthorized>
</AuthorizeView>


@code {
    private bool collapseNavMenu = true;
    private bool collapseProfileNavMenu = true;
    private bool showProfileMenu = false;
    private bool showMaterialsMenu = false;
    private bool showHomeworksMenu = false;
    private string roleString = "";
    private bool roleChecked = false;
    private IEnumerable<MaterialGroupSingleViewModel> materialGroupViewModels;

    public string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    public string? ProfilMenuCssClass => collapseProfileNavMenu ? "collapse" : null;

    public void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    public void ToggleProfileMenu()
    {
        collapseProfileNavMenu = !collapseProfileNavMenu;
    }

    private bool clicked = false;

    public void ShowMaterialsMenu()
    {
        if (showMaterialsMenu == true)
            showMaterialsMenu = false;
        else
            showMaterialsMenu = true;

    }

    public void ShowProfileMenu()
    {
        if (showProfileMenu == true)
            showProfileMenu = false;
        else
            showProfileMenu = true;

    }

    public void ShowHomeworksMenu()
    {
        if (showHomeworksMenu == true)
            showHomeworksMenu = false;
        else
            showHomeworksMenu = true;
    }

    public void HideAllMenus()
    {
        showProfileMenu = false;
        showMaterialsMenu = false;
        showHomeworksMenu = false;
        collapseNavMenu = true;
        collapseProfileNavMenu = true;
    }

    public async Task LoadDataAsync()
    {
        var state = await AuthState.GetAuthenticationStateAsync();
        var user = state.User;
        var userId = user.FindFirst("id");
        var role = user.FindFirst(ClaimTypes.Role);
        roleString = role.Value;

        materialGroupViewModels = await MaterialsGroupService.GetMaterialGroupList(new UserInfo() { Id = userId.Value, Role = role.Value });
        roleChecked = false;
    }

    private async Task SetChecked()
    {
        roleChecked = true;
    }

    private void Navigate(int materialGroupId)
    {
        HideAllMenus();
        NavigationManager.NavigateTo("materials/" + materialGroupId);
    }
}
